plugins {
    id 'multiloader-common'
}

configurations {
    commonJava{
        canBeResolved = true
    }
    commonResources{
        canBeResolved = true
    }
}

dependencies {
    compileOnly(project(":common:C${minecraft_version}")) {
        capabilities {
            requireCapability "$group:$mod_id"
        }
    }
    commonJava project(path: ":common:C${minecraft_version}", configuration: 'commonJava')
    commonResources project(path: ":common:C${minecraft_version}", configuration: 'commonResources')
}

tasks.named('compileJava', JavaCompile) {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

processResources {
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}

tasks.named('javadoc', Javadoc).configure {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

tasks.named('sourcesJar', Jar) {
    dependsOn(configurations.commonJava)
    from(configurations.commonJava)
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}

tasks.named("jar") {
    doLast {
        copy {
            from archiveFile
            into "${rootProject.projectDir}/build"
        }
    }
}

layout.buildDirectory = file("${rootProject.projectDir}/build/${platform}/${project.name}")