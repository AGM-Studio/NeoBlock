plugins {
    id 'multiloader-common'
    id 'net.neoforged.moddev'
    id 'net.neoforged.moddev.legacyforge'
}

neoForge {
    version = "${minecraft_version}-${forge_version}"
    // Automatically enable AccessTransformers if the file exists
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:26.0.2'
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'

    compileOnly group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'

    // API of JEI
    compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
}

