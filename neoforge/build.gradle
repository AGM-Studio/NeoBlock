plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

moduleExpandProps = [
    'version'                       : version,
    'minecraft_version'             : minecraft_version,
    'minecraft_version_range'       : minecraft_version_range,
    'parchment_minecraft'           : parchment_minecraft,
    'parchment_version'             : parchment_version,
    'neoforge_version'              : neoforge_version,
    'neoforge_loader_version_range' : neoforge_loader_version_range
]

neoForge {
    version = neoforge_version

    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            //noinspection GroovyAssignabilityCheck
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric

            gameDirectory.set(file("${rootProject.projectDir}/.runs/${project.name}/${it.name}"))
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            //noinspection GroovyAssignabilityCheck
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
layout.buildDirectory = file("${rootProject.projectDir}/build/${project.name}")
